/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VeriSocialProfile,
  VeriSocialProfileInterface,
} from "../VeriSocialProfile";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorldID",
        name: "_worldId",
        type: "address",
      },
      {
        internalType: "string",
        name: "_appId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_actionId",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidNullifier",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "devMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052600160c08190526007553480156200001b57600080fd5b5060405162001ccb38038062001ccb8339810160408190526200003e9162000212565b6040518060400160405280600881526020016710dbdb9d1c9858dd60c21b8152506040518060400160405280600881526020016710d3d395149050d560c21b81525081600090816200009191906200032b565b506001620000a082826200032b565b5050506001600160a01b0383166080526040516200010190620000ed90620000cd908590602001620003f7565b6040516020818303038152906040526200010e60201b620009b91760201c565b82604051602001620000cd92919062000415565b60a052506200043d915050565b6000600882604051602001620001259190620003f7565b60408051601f198184030181529190528051602090910120901c92915050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001785781810151838201526020016200015e565b50506000910152565b600082601f8301126200019357600080fd5b81516001600160401b0380821115620001b057620001b062000145565b604051601f8301601f19908116603f01168101908282118183101715620001db57620001db62000145565b81604052838152866020858801011115620001f557600080fd5b620002088460208301602089016200015b565b9695505050505050565b6000806000606084860312156200022857600080fd5b83516001600160a01b03811681146200024057600080fd5b60208501519093506001600160401b03808211156200025e57600080fd5b6200026c8783880162000181565b935060408601519150808211156200028357600080fd5b50620002928682870162000181565b9150509250925092565b600181811c90821680620002b157607f821691505b602082108103620002d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032657600081815260208120601f850160051c81016020861015620003015750805b601f850160051c820191505b8181101562000322578281556001016200030d565b5050505b505050565b81516001600160401b0381111562000347576200034762000145565b6200035f816200035884546200029c565b84620002d8565b602080601f8311600181146200039757600084156200037e5750858301515b600019600386901b1c1916600185901b17855562000322565b600085815260208120601f198616915b82811015620003c857888601518255948401946001909101908401620003a7565b5085821015620003e75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200040b8184602087016200015b565b9190910192915050565b828152600082516200042f8160208501602087016200015b565b919091016020019392505050565b60805160a05160c05161185e6200046d60003960006105e401526000610646015260006105b4015261185e6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806342966c68116100a257806395d89b411161007157806395d89b4114610242578063a22cb4651461024a578063b88d4fde1461025d578063c87b56dd14610270578063e985e9c51461028357600080fd5b806342966c68146101f65780636352211e146102095780636f07beba1461021c57806370a082311461022f57600080fd5b8063162094c4116100e9578063162094c41461019857806318160ddd146101ab57806323b872dd146101bd57806341776efb146101d057806342842e0e146101e357600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e6101293660046110d6565b6102bf565b60405190151581526020015b60405180910390f35b61014b610311565b60405161013a9190611143565b61016b610166366004611156565b6103a3565b6040516001600160a01b03909116815260200161013a565b61019661019136600461118b565b6103ca565b005b6101966101a6366004611261565b6104e4565b6007545b60405190815260200161013a565b6101966101cb3660046112a8565b610551565b6101966101de3660046112e4565b610582565b6101966101f13660046112a8565b61075a565b610196610204366004611156565b610775565b61016b610217366004611156565b610781565b61019661022a36600461135d565b6107e1565b6101af61023d366004611392565b610865565b61014b6108eb565b6101966102583660046113ad565b6108fa565b61019661026b3660046113e9565b610909565b61014b61027e366004611156565b610941565b61012e610291366004611465565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102f057506001600160e01b03198216635b5e139f60e01b145b8061030b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032090611498565b80601f016020809104026020016040519081016040528092919081815260200182805461034c90611498565b80156103995780601f1061036e57610100808354040283529160200191610399565b820191906000526020600020905b81548152906001019060200180831161037c57829003601f168201915b5050505050905090565b60006103ae826109ee565b506000908152600460205260409020546001600160a01b031690565b60006103d582610781565b9050806001600160a01b0316836001600160a01b0316036104475760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061046357506104638133610291565b6104d55760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161043e565b6104df8383610a4d565b505050565b6104ed826109ee565b336104f783610781565b6001600160a01b0316146105395760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015260640161043e565b60008281526008602052604090206104df8282611520565b61055b3382610abb565b6105775760405162461bcd60e51b815260040161043e906115e0565b6104df838383610b3a565b60008381526006602052604090205460ff16156105b257604051632ec8265960e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633bc778e3857f00000000000000000000000000000000000000000000000000000000000000006106438960405160200161062f919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040526109b9565b877f0000000000000000000000000000000000000000000000000000000000000000886040518763ffffffff1660e01b81526004016106879695949392919061162d565b60006040518083038186803b15801561069f57600080fd5b505afa1580156106b3573d6000803e3d6000fd5b5050506000848152600660205260409020805460ff19166001179055506007546106de903390610c9e565b600780549060006106ee83611665565b9091555050600754600090815260086020526040902061070e8282611520565b50600754336001600160a01b03167fe7cd4ce7f2a465edc730269a1305e8a48bad821e8fb7e152ec413829c01a53c48360405161074b9190611143565b60405180910390a35050505050565b6104df83838360405180602001604052806000815250610909565b61077e81610e29565b50565b6000818152600260205260408120546001600160a01b03168061030b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161043e565b6107ed33600754610c9e565b600780549060006107fd83611665565b9091555050600754600090815260086020526040902061081d8282611520565b50600754336001600160a01b03167fe7cd4ce7f2a465edc730269a1305e8a48bad821e8fb7e152ec413829c01a53c48360405161085a9190611143565b60405180910390a350565b60006001600160a01b0382166108cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161043e565b506001600160a01b031660009081526003602052604090205490565b60606001805461032090611498565b610905338383610ebe565b5050565b6109133383610abb565b61092f5760405162461bcd60e51b815260040161043e906115e0565b61093b84848484610f8c565b50505050565b606061094c826109ee565b600061096360408051602081019091526000815290565b9050600081511161098357604051806020016040528060008152506109b2565b60008381526008602090815260409182902091516109a292910161168c565b6040516020818303038152906040525b9392505050565b60006008826040516020016109ce919061171b565b60408051601f198184030181529190528051602090910120901c92915050565b6000818152600260205260409020546001600160a01b031661077e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161043e565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a8282610781565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ac783610781565b9050806001600160a01b0316846001600160a01b03161480610b0e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b325750836001600160a01b0316610b27846103a3565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b4d82610781565b6001600160a01b031614610b735760405162461bcd60e51b815260040161043e90611737565b6001600160a01b038216610bd55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161043e565b826001600160a01b0316610be882610781565b6001600160a01b031614610c0e5760405162461bcd60e51b815260040161043e90611737565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610cf45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161043e565b6000818152600260205260409020546001600160a01b031615610d595760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161043e565b6000818152600260205260409020546001600160a01b031615610dbe5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161043e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610e3482610781565b9050610e3f82610781565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b031603610f1f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161043e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f97848484610b3a565b610fa384848484610fbf565b61093b5760405162461bcd60e51b815260040161043e9061177c565b60006001600160a01b0384163b156110b557604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110039033908990889088906004016117ce565b6020604051808303816000875af192505050801561103e575060408051601f3d908101601f1916820190925261103b9181019061180b565b60015b61109b573d80801561106c576040519150601f19603f3d011682016040523d82523d6000602084013e611071565b606091505b5080516000036110935760405162461bcd60e51b815260040161043e9061177c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b32565b506001949350505050565b6001600160e01b03198116811461077e57600080fd5b6000602082840312156110e857600080fd5b81356109b2816110c0565b60005b8381101561110e5781810151838201526020016110f6565b50506000910152565b6000815180845261112f8160208601602086016110f3565b601f01601f19169290920160200192915050565b6020815260006109b26020830184611117565b60006020828403121561116857600080fd5b5035919050565b80356001600160a01b038116811461118657600080fd5b919050565b6000806040838503121561119e57600080fd5b6111a78361116f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156111e6576111e66111b5565b604051601f8501601f19908116603f0116810190828211818310171561120e5761120e6111b5565b8160405280935085815286868601111561122757600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261125257600080fd5b6109b2838335602085016111cb565b6000806040838503121561127457600080fd5b82359150602083013567ffffffffffffffff81111561129257600080fd5b61129e85828601611241565b9150509250929050565b6000806000606084860312156112bd57600080fd5b6112c68461116f565b92506112d46020850161116f565b9150604084013590509250925092565b600080600080600061018086880312156112fd57600080fd5b6113068661116f565b9450602086013593506040860135925061016086018781111561132857600080fd5b6060870192503567ffffffffffffffff81111561134457600080fd5b61135088828901611241565b9150509295509295909350565b60006020828403121561136f57600080fd5b813567ffffffffffffffff81111561138657600080fd5b610b3284828501611241565b6000602082840312156113a457600080fd5b6109b28261116f565b600080604083850312156113c057600080fd5b6113c98361116f565b9150602083013580151581146113de57600080fd5b809150509250929050565b600080600080608085870312156113ff57600080fd5b6114088561116f565b93506114166020860161116f565b925060408501359150606085013567ffffffffffffffff81111561143957600080fd5b8501601f8101871361144a57600080fd5b611459878235602084016111cb565b91505092959194509250565b6000806040838503121561147857600080fd5b6114818361116f565b915061148f6020840161116f565b90509250929050565b600181811c908216806114ac57607f821691505b6020821081036114cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104df57600081815260208120601f850160051c810160208610156114f95750805b601f850160051c820191505b8181101561151857828155600101611505565b505050505050565b815167ffffffffffffffff81111561153a5761153a6111b5565b61154e816115488454611498565b846114d2565b602080601f831160018114611583576000841561156b5750858301515b600019600386901b1c1916600185901b178555611518565b600085815260208120601f198616915b828110156115b257888601518255948401946001909101908401611593565b50858210156115d05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60006101a0820190508782528660208301528560408301528460608301528360808301526101008360a0840137979650505050505050565b60006001820161168557634e487b7160e01b600052601160045260246000fd5b5060010190565b66697066733a2f2f60c81b815260006007600084546116aa81611498565b600182811680156116c257600181146116db5761170e565b60ff19841688870152821515830288018601945061170e565b8860005260208060002060005b858110156117035781548b82018a01529084019082016116e8565b505050858389010194505b5092979650505050505050565b6000825161172d8184602087016110f3565b9190910192915050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061180190830184611117565b9695505050505050565b60006020828403121561181d57600080fd5b81516109b2816110c056fea26469706673582212208a1316e0049db2dd359afe26fa3f7b0a7edf8c9e904cb8a7f00605397d3ae91164736f6c63430008110033";

type VeriSocialProfileConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeriSocialProfileConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VeriSocialProfile__factory extends ContractFactory {
  constructor(...args: VeriSocialProfileConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _worldId: string,
    _appId: string,
    _actionId: string,
    overrides?: Overrides & { from?: string }
  ): Promise<VeriSocialProfile> {
    return super.deploy(
      _worldId,
      _appId,
      _actionId,
      overrides || {}
    ) as Promise<VeriSocialProfile>;
  }
  override getDeployTransaction(
    _worldId: string,
    _appId: string,
    _actionId: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _worldId,
      _appId,
      _actionId,
      overrides || {}
    );
  }
  override attach(address: string): VeriSocialProfile {
    return super.attach(address) as VeriSocialProfile;
  }
  override connect(signer: Signer): VeriSocialProfile__factory {
    return super.connect(signer) as VeriSocialProfile__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeriSocialProfileInterface {
    return new utils.Interface(_abi) as VeriSocialProfileInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VeriSocialProfile {
    return new Contract(address, _abi, signerOrProvider) as VeriSocialProfile;
  }
}
